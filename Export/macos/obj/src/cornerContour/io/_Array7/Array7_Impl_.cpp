// Generated by Haxe 4.3.0-rc.1+5f599ba
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_cornerContour_io__Array7_Array7_Impl_
#include <cornerContour/io/_Array7/Array7_Impl_.h>
#endif
#ifndef INCLUDED_cornerContour_io__ArrayFlatDepth_ArrayFlatDepth_Impl_
#include <cornerContour/io/_ArrayFlatDepth/ArrayFlatDepth_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_02fac7530b97af9d_9_readItem,"cornerContour.io._Array7.Array7_Impl_","readItem",0x108372c9,"cornerContour.io._Array7.Array7_Impl_.readItem","cornerContour/io/Array7.hx",9,0xd233bb41)
HX_LOCAL_STACK_FRAME(_hx_pos_02fac7530b97af9d_13_writeItem,"cornerContour.io._Array7.Array7_Impl_","writeItem",0x1e00be52,"cornerContour.io._Array7.Array7_Impl_.writeItem","cornerContour/io/Array7.hx",13,0xd233bb41)
HX_LOCAL_STACK_FRAME(_hx_pos_02fac7530b97af9d_17__new,"cornerContour.io._Array7.Array7_Impl_","_new",0x3c3048a1,"cornerContour.io._Array7.Array7_Impl_._new","cornerContour/io/Array7.hx",17,0xd233bb41)
HX_LOCAL_STACK_FRAME(_hx_pos_02fac7530b97af9d_24_get_index,"cornerContour.io._Array7.Array7_Impl_","get_index",0xd14afc29,"cornerContour.io._Array7.Array7_Impl_.get_index","cornerContour/io/Array7.hx",24,0xd233bb41)
HX_LOCAL_STACK_FRAME(_hx_pos_02fac7530b97af9d_27_set_index,"cornerContour.io._Array7.Array7_Impl_","set_index",0xb49be835,"cornerContour.io._Array7.Array7_Impl_.set_index","cornerContour/io/Array7.hx",27,0xd233bb41)
HX_LOCAL_STACK_FRAME(_hx_pos_02fac7530b97af9d_33_toEnd,"cornerContour.io._Array7.Array7_Impl_","toEnd",0x860a59e0,"cornerContour.io._Array7.Array7_Impl_.toEnd","cornerContour/io/Array7.hx",33,0xd233bb41)
HX_LOCAL_STACK_FRAME(_hx_pos_02fac7530b97af9d_37_toStart,"cornerContour.io._Array7.Array7_Impl_","toStart",0xf44e15a7,"cornerContour.io._Array7.Array7_Impl_.toStart","cornerContour/io/Array7.hx",37,0xd233bb41)
HX_LOCAL_STACK_FRAME(_hx_pos_02fac7530b97af9d_41_swap,"cornerContour.io._Array7.Array7_Impl_","swap",0x496f5dd3,"cornerContour.io._Array7.Array7_Impl_.swap","cornerContour/io/Array7.hx",41,0xd233bb41)
namespace cornerContour{
namespace io{
namespace _Array7{

void Array7_Impl__obj::__construct() { }

Dynamic Array7_Impl__obj::__CreateEmpty() { return new Array7_Impl__obj; }

void *Array7_Impl__obj::_hx_vtable = 0;

Dynamic Array7_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Array7_Impl__obj > _hx_result = new Array7_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Array7_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x71d3e730;
}

Float Array7_Impl__obj::readItem(::Array< Float > this1,int k){
            	HX_STACKFRAME(&_hx_pos_02fac7530b97af9d_9_readItem)
HXDLIN(   9)		return this1->__get((((::Std_obj::_hx_int(this1->__get(0)) * 7) + k) + 1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Array7_Impl__obj,readItem,return )

Float Array7_Impl__obj::writeItem(::Array< Float > this1,int k,Float v){
            	HX_STACKFRAME(&_hx_pos_02fac7530b97af9d_13_writeItem)
HXLINE(  14)		this1[(((::Std_obj::_hx_int(this1->__get(0)) * 7) + k) + 1)] = v;
HXLINE(  15)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Array7_Impl__obj,writeItem,return )

::Array< Float > Array7_Impl__obj::_new(){
            	HX_STACKFRAME(&_hx_pos_02fac7530b97af9d_17__new)
HXLINE(  19)		::Array< Float > this1 = ::Array_obj< Float >::__new();
HXDLIN(  19)		this1[0] = ((Float)0.);
HXDLIN(  19)		::Array< Float > this2 = this1;
HXLINE(  17)		::Array< Float > this3 = this2;
HXDLIN(  17)		return this3;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Array7_Impl__obj,_new,return )

int Array7_Impl__obj::get_index(::Array< Float > this1){
            	HX_STACKFRAME(&_hx_pos_02fac7530b97af9d_24_get_index)
HXDLIN(  24)		return ::Std_obj::_hx_int(this1->__get(0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Array7_Impl__obj,get_index,return )

int Array7_Impl__obj::set_index(::Array< Float > this1,int id){
            	HX_STACKFRAME(&_hx_pos_02fac7530b97af9d_27_set_index)
HXLINE(  28)		this1[0] = ( (Float)(id) );
HXLINE(  29)		return id;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Array7_Impl__obj,set_index,return )

bool Array7_Impl__obj::toEnd(::Array< Float > this1,int id,int len){
            	HX_STACKFRAME(&_hx_pos_02fac7530b97af9d_33_toEnd)
HXDLIN(  33)		int _hx_tmp = ::Std_obj::_hx_int(( (Float)((7 * len)) ));
HXDLIN(  33)		return ::cornerContour::io::_ArrayFlatDepth::ArrayFlatDepth_Impl__obj::rangeToEnd(this1,(id * 7),_hx_tmp,(this1->length - 1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Array7_Impl__obj,toEnd,return )

bool Array7_Impl__obj::toStart(::Array< Float > this1,int id,int len){
            	HX_STACKFRAME(&_hx_pos_02fac7530b97af9d_37_toStart)
HXDLIN(  37)		int starting = (id * 7);
HXDLIN(  37)		int totalLen = ::Std_obj::_hx_int(( (Float)((7 * len)) ));
HXDLIN(  37)		if ((starting == 0)) {
HXDLIN(  37)			return false;
            		}
            		else {
HXDLIN(  37)			int ending = (starting + totalLen);
HXDLIN(  37)			::Array< Float > temp = ::Array_obj< Float >::__new(0);
HXDLIN(  37)			int count = 0;
HXDLIN(  37)			{
HXDLIN(  37)				int _g = starting;
HXDLIN(  37)				int _g1 = ending;
HXDLIN(  37)				while((_g < _g1)){
HXDLIN(  37)					_g = (_g + 1);
HXDLIN(  37)					int i = (_g - 1);
HXDLIN(  37)					temp[count] = this1->__get((i + 1));
HXDLIN(  37)					count = (count + 1);
            				}
            			}
HXDLIN(  37)			count = totalLen;
HXDLIN(  37)			{
HXDLIN(  37)				int _g2 = 0;
HXDLIN(  37)				int _g3 = starting;
HXDLIN(  37)				while((_g2 < _g3)){
HXDLIN(  37)					_g2 = (_g2 + 1);
HXDLIN(  37)					int i = (_g2 - 1);
HXDLIN(  37)					{
HXDLIN(  37)						Float v = this1->__get((((starting - 1) - i) + 1));
HXDLIN(  37)						this1[(((ending - 1) - i) + 1)] = v;
            					}
            				}
            			}
HXDLIN(  37)			count = 0;
HXDLIN(  37)			{
HXDLIN(  37)				int _g4 = 0;
HXDLIN(  37)				int _g5 = totalLen;
HXDLIN(  37)				while((_g4 < _g5)){
HXDLIN(  37)					_g4 = (_g4 + 1);
HXDLIN(  37)					int i = (_g4 - 1);
HXDLIN(  37)					{
HXDLIN(  37)						Float v = temp->__get((count - 2));
HXDLIN(  37)						this1[(i + 1)] = v;
            					}
HXDLIN(  37)					count = (count + 1);
            				}
            			}
HXDLIN(  37)			temp = null();
HXDLIN(  37)			return true;
            		}
HXDLIN(  37)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Array7_Impl__obj,toStart,return )

bool Array7_Impl__obj::swap(::Array< Float > this1,int id0,int id1,int len){
            	HX_STACKFRAME(&_hx_pos_02fac7530b97af9d_41_swap)
HXDLIN(  41)		int start0 = (id0 * 7);
HXDLIN(  41)		int start1 = (id1 * 7);
HXDLIN(  41)		int totalLen = ::Std_obj::_hx_int(( (Float)((7 * len)) ));
HXDLIN(  41)		bool _hx_tmp;
HXDLIN(  41)		if (((start0 + totalLen) > (this1->length - 1))) {
HXDLIN(  41)			_hx_tmp = ((start1 + totalLen) > (this1->length - 1));
            		}
            		else {
HXDLIN(  41)			_hx_tmp = false;
            		}
HXDLIN(  41)		if (_hx_tmp) {
HXDLIN(  41)			Float temp0;
HXDLIN(  41)			Float temp1;
HXDLIN(  41)			{
HXDLIN(  41)				int _g = 0;
HXDLIN(  41)				int _g1 = totalLen;
HXDLIN(  41)				while((_g < _g1)){
HXDLIN(  41)					_g = (_g + 1);
HXDLIN(  41)					int i = (_g - 1);
HXDLIN(  41)					temp0 = this1->__get(((start0 + i) + 1));
HXDLIN(  41)					temp1 = this1->__get(((start1 + i) + 1));
HXDLIN(  41)					this1[((start0 + i) + 1)] = temp1;
HXDLIN(  41)					this1[((start1 + i) + 1)] = temp0;
            				}
            			}
HXDLIN(  41)			return true;
            		}
            		else {
HXDLIN(  41)			return false;
            		}
HXDLIN(  41)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Array7_Impl__obj,swap,return )


Array7_Impl__obj::Array7_Impl__obj()
{
}

bool Array7_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"swap") ) { outValue = swap_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toEnd") ) { outValue = toEnd_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"toStart") ) { outValue = toStart_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"readItem") ) { outValue = readItem_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"writeItem") ) { outValue = writeItem_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_index") ) { outValue = get_index_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_index") ) { outValue = set_index_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Array7_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Array7_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Array7_Impl__obj::__mClass;

static ::String Array7_Impl__obj_sStaticFields[] = {
	HX_("readItem",89,9f,b7,6d),
	HX_("writeItem",92,b9,73,4e),
	HX_("_new",61,15,1f,3f),
	HX_("get_index",69,f7,bd,01),
	HX_("set_index",75,e3,0e,e5),
	HX_("toEnd",20,b5,0e,14),
	HX_("toStart",e7,c0,8f,50),
	HX_("swap",93,2a,5e,4c),
	::String(null())
};

void Array7_Impl__obj::__register()
{
	Array7_Impl__obj _hx_dummy;
	Array7_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("cornerContour.io._Array7.Array7_Impl_",2e,f5,cf,84);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Array7_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Array7_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Array7_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Array7_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Array7_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace cornerContour
} // end namespace io
} // end namespace _Array7
