// Generated by Haxe 4.3.0-rc.1+5f599ba
#ifndef INCLUDED_cornerContour_io__Array2DTriangles_Array2DTriangles_Impl_
#define INCLUDED_cornerContour_io__Array2DTriangles_Array2DTriangles_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(cornerContour,io,_Array2DTriangles,Array2DTriangles_Impl_)

namespace cornerContour{
namespace io{
namespace _Array2DTriangles{


class HXCPP_CLASS_ATTRIBUTES Array2DTriangles_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Array2DTriangles_Impl__obj OBJ_;
		Array2DTriangles_Impl__obj();

	public:
		enum { _hx_ClassId = 0x515a0f98 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="cornerContour.io._Array2DTriangles.Array2DTriangles_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"cornerContour.io._Array2DTriangles.Array2DTriangles_Impl_"); }

		inline static ::hx::ObjectPtr< Array2DTriangles_Impl__obj > __new() {
			::hx::ObjectPtr< Array2DTriangles_Impl__obj > __this = new Array2DTriangles_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Array2DTriangles_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Array2DTriangles_Impl__obj *__this = (Array2DTriangles_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Array2DTriangles_Impl__obj), false, "cornerContour.io._Array2DTriangles.Array2DTriangles_Impl_"));
			*(void **)__this = Array2DTriangles_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Array2DTriangles_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Array2DTriangles_Impl_",40,22,d1,86); }

		static ::Array< Float > _new();
		static ::Dynamic _new_dyn();

		static ::Array< Float > create();
		static ::Dynamic create_dyn();

		static Float get_ax(::Array< Float > this1);
		static ::Dynamic get_ax_dyn();

		static Float set_ax(::Array< Float > this1,Float v);
		static ::Dynamic set_ax_dyn();

		static Float get_ay(::Array< Float > this1);
		static ::Dynamic get_ay_dyn();

		static Float set_ay(::Array< Float > this1,Float v);
		static ::Dynamic set_ay_dyn();

		static Float get_bx(::Array< Float > this1);
		static ::Dynamic get_bx_dyn();

		static Float set_bx(::Array< Float > this1,Float v);
		static ::Dynamic set_bx_dyn();

		static Float get_by(::Array< Float > this1);
		static ::Dynamic get_by_dyn();

		static Float set_by(::Array< Float > this1,Float v);
		static ::Dynamic set_by_dyn();

		static Float get_cx(::Array< Float > this1);
		static ::Dynamic get_cx_dyn();

		static Float set_cx(::Array< Float > this1,Float v);
		static ::Dynamic set_cx_dyn();

		static Float get_cy(::Array< Float > this1);
		static ::Dynamic get_cy_dyn();

		static Float set_cy(::Array< Float > this1,Float v);
		static ::Dynamic set_cy_dyn();

		static Float get_color(::Array< Float > this1);
		static ::Dynamic get_color_dyn();

		static Float set_color(::Array< Float > this1,Float v);
		static ::Dynamic set_color_dyn();

		static int get_colorInt(::Array< Float > this1);
		static ::Dynamic get_colorInt_dyn();

		static int set_colorInt(::Array< Float > this1,int v);
		static ::Dynamic set_colorInt_dyn();

		static int applyFill(::Array< Float > this1, ::Dynamic fill2D);
		static ::Dynamic applyFill_dyn();

		static int triangle2DFill(::Array< Float > this1,Float ax_,Float ay_,Float bx_,Float by_,Float cx_,Float cy_, ::Dynamic color_);
		static ::Dynamic triangle2DFill_dyn();

		static bool triangle(::Array< Float > this1,Float ax_,Float ay_,Float bx_,Float by_,Float cx_,Float cy_);
		static ::Dynamic triangle_dyn();

		static bool adjustWinding(::Array< Float > this1);
		static ::Dynamic adjustWinding_dyn();

		static Float get_x(::Array< Float > this1);
		static ::Dynamic get_x_dyn();

		static Float set_x(::Array< Float > this1,Float x);
		static ::Dynamic set_x_dyn();

		static Float get_y(::Array< Float > this1);
		static ::Dynamic get_y_dyn();

		static Float set_y(::Array< Float > this1,Float y);
		static ::Dynamic set_y_dyn();

		static Float get_right(::Array< Float > this1);
		static ::Dynamic get_right_dyn();

		static Float get_bottom(::Array< Float > this1);
		static ::Dynamic get_bottom_dyn();

		static void moveDelta(::Array< Float > this1,Float dx,Float dy);
		static ::Dynamic moveDelta_dyn();

		static int sign(Float n);
		static ::Dynamic sign_dyn();

		static Float distHit(::Array< Float > this1,Float px,Float py);
		static ::Dynamic distHit_dyn();

		static bool liteHit(::Array< Float > this1,Float px,Float py);
		static ::Dynamic liteHit_dyn();

		static bool fullHit(::Array< Float > this1,Float px,Float py);
		static ::Dynamic fullHit_dyn();

		static void rotate(::Array< Float > this1,Float x,Float y,Float theta);
		static ::Dynamic rotate_dyn();

		static void rotateTrig(::Array< Float > this1,Float x,Float y,Float cos,Float sin);
		static ::Dynamic rotateTrig_dyn();

		static ::String prettyString(::Array< Float > this1);
		static ::Dynamic prettyString_dyn();

		static ::String hex(::Array< Float > this1);
		static ::Dynamic hex_dyn();

};

} // end namespace cornerContour
} // end namespace io
} // end namespace _Array2DTriangles

#endif /* INCLUDED_cornerContour_io__Array2DTriangles_Array2DTriangles_Impl_ */ 
