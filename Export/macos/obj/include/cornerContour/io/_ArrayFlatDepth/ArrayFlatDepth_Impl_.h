// Generated by Haxe 4.3.0-rc.1+5f599ba
#ifndef INCLUDED_cornerContour_io__ArrayFlatDepth_ArrayFlatDepth_Impl_
#define INCLUDED_cornerContour_io__ArrayFlatDepth_ArrayFlatDepth_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(cornerContour,io,_ArrayFlatDepth,ArrayFlatDepth_Impl_)
HX_DECLARE_CLASS2(lime,utils,ArrayBufferView)

namespace cornerContour{
namespace io{
namespace _ArrayFlatDepth{


class HXCPP_CLASS_ATTRIBUTES ArrayFlatDepth_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ArrayFlatDepth_Impl__obj OBJ_;
		ArrayFlatDepth_Impl__obj();

	public:
		enum { _hx_ClassId = 0x78fa2b7a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="cornerContour.io._ArrayFlatDepth.ArrayFlatDepth_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"cornerContour.io._ArrayFlatDepth.ArrayFlatDepth_Impl_"); }

		inline static ::hx::ObjectPtr< ArrayFlatDepth_Impl__obj > __new() {
			::hx::ObjectPtr< ArrayFlatDepth_Impl__obj > __this = new ArrayFlatDepth_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ArrayFlatDepth_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			ArrayFlatDepth_Impl__obj *__this = (ArrayFlatDepth_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ArrayFlatDepth_Impl__obj), false, "cornerContour.io._ArrayFlatDepth.ArrayFlatDepth_Impl_"));
			*(void **)__this = ArrayFlatDepth_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ArrayFlatDepth_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ArrayFlatDepth_Impl_",31,31,d2,c8); }

		static ::Array< Float > _new();
		static ::Dynamic _new_dyn();

		static  ::lime::utils::ArrayBufferView getArray(::Array< Float > this1);
		static ::Dynamic getArray_dyn();

		static bool rangeToEnd(::Array< Float > this1,int starting,int totalLen,int section);
		static ::Dynamic rangeToEnd_dyn();

		static bool rangeToStart(::Array< Float > this1,int starting,int totalLen);
		static ::Dynamic rangeToStart_dyn();

		static bool rangeSwitch(::Array< Float > this1,int start0,int start1,int totalLen);
		static ::Dynamic rangeSwitch_dyn();

};

} // end namespace cornerContour
} // end namespace io
} // end namespace _ArrayFlatDepth

#endif /* INCLUDED_cornerContour_io__ArrayFlatDepth_ArrayFlatDepth_Impl_ */ 
